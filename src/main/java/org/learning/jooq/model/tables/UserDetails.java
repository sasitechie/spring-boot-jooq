/*
 * This file is generated by jOOQ.
*/
package org.learning.jooq.model.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.learning.jooq.model.Keys;
import org.learning.jooq.model.Public;
import org.learning.jooq.model.tables.records.UserDetailsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDetails extends TableImpl<UserDetailsRecord> {

    private static final long serialVersionUID = 95985305;

    /**
     * The reference instance of <code>public.user_details</code>
     */
    public static final UserDetails USER_DETAILS = new UserDetails();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserDetailsRecord> getRecordType() {
        return UserDetailsRecord.class;
    }

    /**
     * The column <code>public.user_details.id</code>.
     */
    public final TableField<UserDetailsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.user_details.email</code>.
     */
    public final TableField<UserDetailsRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.user_details.mobile</code>.
     */
    public final TableField<UserDetailsRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.user_details.username</code>.
     */
    public final TableField<UserDetailsRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>public.user_details</code> table reference
     */
    public UserDetails() {
        this("user_details", null);
    }

    /**
     * Create an aliased <code>public.user_details</code> table reference
     */
    public UserDetails(String alias) {
        this(alias, USER_DETAILS);
    }

    private UserDetails(String alias, Table<UserDetailsRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserDetails(String alias, Table<UserDetailsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserDetailsRecord> getPrimaryKey() {
        return Keys.USER_DETAILS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserDetailsRecord>> getKeys() {
        return Arrays.<UniqueKey<UserDetailsRecord>>asList(Keys.USER_DETAILS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserDetails as(String alias) {
        return new UserDetails(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserDetails rename(String name) {
        return new UserDetails(name, null);
    }
}
